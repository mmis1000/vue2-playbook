{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./src/components/recursive.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./src/views/Recursive.vue?381a","webpack:///src/views/Recursive.vue","webpack:///./src/views/Recursive.vue?a4ef","webpack:///./src/views/Recursive.vue"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","SubTree","name","functional","render","createElement","context","props","template","data","TreeRoot","components","depth","scopedSlots","default","vnodes","attrs","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","Context","_invoke","makeInvokeMethod","tryCatch","type","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","_vm","_h","$createElement","_c","_self","staticStyle","_v","_u","ref","on","$event","toggle","_s","show","text","children","_l","index","_b","_e","staticRenderFns","methods","node","component"],"mappings":"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","file":"js/recursive.4a9f602a.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export const SubTree = {\n  name: \"sub-tree\",\n  functional: true,\n  render: function (createElement, context) {\n    const { template, data } = context.props\n    return template(data)\n  }\n}\n\nexport const TreeRoot = {\n  name: \"tree-root\",\n  functional: true,\n  components: {\n    async TreeRoot() { return TreeRoot }\n  },\n  render: function (createElement, context) {\n    const data = context.props.data\n    const depth = context.props.depth || 0;\n    const fn = context.scopedSlots.default\n\n    const vnodes = [\n      fn({\n        data,\n        depth,\n        template: (data) => createElement(\n          \"tree-root\",\n          {\n            attrs: { data, depth: depth + 1 },\n            scopedSlots: context.scopedSlots\n          },\n          []\n        )\n      })\n    ]\n\n    return vnodes\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"padding\":\"1em\"}},[_vm._v(\" tree render \"),_c('ul',[_c('li',[_c('tree-root',{attrs:{\"data\":_vm.data},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar depth = ref.depth;\nvar data = ref.data;\nvar template = ref.template;\nreturn [(data.children)?_c('span',{staticStyle:{\"cursor\":\"pointer\"},on:{\"click\":function($event){return _vm.toggle(data)}}},[_vm._v(\" \"+_vm._s(depth)+\" \"+_vm._s(data.show ? \"[-]\" : \"[+]\")+\" \"+_vm._s(data.text)+\" \")]):_c('span',[_vm._v(\" \"+_vm._s(depth)+\" \"+_vm._s(data.text)+\" \")]),(data.children && data.show || false)?_c('ul',_vm._l((data.children),function(data,index){return _c('li',{key:index + '-' + data.text},[_c('sub-tree',_vm._b({},'sub-tree',{data: data, template: template},false))],1)}),0):_vm._e()]}}])})],1)]),_vm._v(\"fucking binary tree \"),_c('tree-root',{attrs:{\"data\":5},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar depth = ref.depth;\nvar data = ref.data;\nvar template = ref.template;\nreturn [(data > 0)?_c('div',{staticStyle:{\"padding-left\":\"10px\"}},[_c('sub-tree',_vm._b({},'sub-tree',{data: data - 1, template: template},false)),_vm._v(\" \"+_vm._s(depth)+\" \"),_c('sub-tree',_vm._b({},'sub-tree',{data: data - 1, template: template},false))],1):_vm._e()]}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div style=\"padding: 1em\">\n    tree render\n    <ul>\n      <li>\n        <!-- temp template function is the wrapper of scope slot itself -->\n        <tree-root :data=\"data\" v-slot=\"{depth, data, template}\">\n          <span style=\"cursor: pointer;\" v-if=\"data.children\" @click=\"toggle(data)\">\n            {{ depth }}\n            {{ data.show ? \"[-]\" : \"[+]\" }}\n            {{ data.text }}\n          </span>\n          <span v-else>\n            {{ depth }}\n            {{ data.text }}\n          </span>\n          <ul v-if=\"data.children && data.show || false\">\n            <li v-for=\"(data, index) in data.children\" :key=\"index + '-' + data.text\">\n              <!-- insert sub tree here start -->\n              <sub-tree v-bind=\"{data, template}\"></sub-tree>\n              <!-- insert sub tree here end -->\n            </li>\n          </ul>\n        </tree-root>\n      </li>\n    </ul>fucking binary tree\n    <tree-root :data=\"5\" v-slot=\"{depth, data, template}\">\n      <div v-if=\"data > 0\" style=\"padding-left: 10px\">\n        <sub-tree v-bind=\"{data: data - 1, template}\"></sub-tree>\n        {{ depth }}\n        <sub-tree v-bind=\"{data: data - 1, template}\"></sub-tree>\n      </div>\n    </tree-root>\n  </div>\n</template>\n\n<script>\nimport { SubTree, TreeRoot } from \"@/components/recursive\";\nexport default {\n  components: {\n    SubTree,\n    TreeRoot\n  },\n  data() {\n    return {\n      data: {\n        text: \"test\",\n        show: true,\n        children: [\n          {\n            text: \"test2\",\n            show: true,\n            children: [\n              {\n                text: \"test5\",\n                show: true,\n                children: [\n                  {\n                    text: \"test9\",\n                    show: true,\n                    children: [\n                      {\n                        text: \"test9\"\n                      }\n                    ]\n                  }\n                ]\n              },\n              {\n                text: \"test5\",\n                show: true,\n                children: [\n                  {\n                    text: \"test9\",\n                    show: true,\n                    children: [\n                      {\n                        text: \"test9\"\n                      }\n                    ]\n                  }\n                ]\n              },\n              {\n                text: \"test6\"\n              }\n            ]\n          },\n          {\n            text: \"test3\",\n            show: true,\n            children: [\n              { text: \"test4\" },\n              { text: \"test4\" },\n              { text: \"test4\" },\n              { text: \"test4\" },\n              { text: \"test4\" }\n            ]\n          }\n        ]\n      }\n    };\n  },\n  methods: {\n    toggle(node) {\n      node.show = !node.show;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Recursive.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Recursive.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Recursive.vue?vue&type=template&id=10b84f67&scoped=true&\"\nimport script from \"./Recursive.vue?vue&type=script&lang=js&\"\nexport * from \"./Recursive.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"10b84f67\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}