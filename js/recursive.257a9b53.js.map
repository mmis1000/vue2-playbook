{"version":3,"sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js","webpack:///./src/components/recursive.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./src/views/Recursive.vue?5f28","webpack:///src/views/Recursive.vue","webpack:///./src/views/Recursive.vue?a4ef","webpack:///./src/views/Recursive.vue"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","promise_default","a","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","SubTree","name","functional","render","createElement","context","_context$props","props","template","data","TreeRoot","components","_TreeRoot2","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","depth","scopedSlots","default","vnodes","attrs","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","Context","_invoke","makeInvokeMethod","tryCatch","obj","type","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","AsyncIterator","invoke","record","result","Promise","__await","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","TypeError","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","charAt","slice","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","accidentalStrictMode","Function","_vm","_h","$createElement","_c","_self","staticStyle","padding","_v","_u","ref","cursor","on","click","$event","toggle","_s","show","text","children","_l","index","_b","_e","padding-left","staticRenderFns","Recursivevue_type_script_lang_js_","recursive","methods","node","views_Recursivevue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/recursive.257a9b53.js","sourcesContent":["import _Promise from \"../../core-js/promise\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export const SubTree = {\n  name: \"sub-tree\",\n  functional: true,\n  render: function (createElement, context) {\n    const { template, data } = context.props\n    return template(data)\n  }\n}\n\nexport const TreeRoot = {\n  name: \"tree-root\",\n  functional: true,\n  components: {\n    async TreeRoot() { return TreeRoot }\n  },\n  render: function (createElement, context) {\n    const data = context.props.data\n    const depth = context.props.depth || 0;\n    const fn = context.scopedSlots.default\n\n    const vnodes = [\n      fn({\n        data,\n        depth,\n        template: (data) => createElement(\n          \"tree-root\",\n          {\n            attrs: { data, depth: depth + 1 },\n            scopedSlots: context.scopedSlots\n          },\n          []\n        )\n      })\n    ]\n\n    return vnodes\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"padding\":\"1em\"}},[_vm._v(\"\\n  tree render\\n  \"),_c('ul',[_c('li',[_c('tree-root',{attrs:{\"data\":_vm.data},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar depth = ref.depth;\nvar data = ref.data;\nvar template = ref.template;\nreturn [(data.children)?_c('span',{staticStyle:{\"cursor\":\"pointer\"},on:{\"click\":function($event){return _vm.toggle(data)}}},[_vm._v(\"\\n          \"+_vm._s(depth)+\"\\n          \"+_vm._s(data.show ? \"[-]\" : \"[+]\")+\"\\n          \"+_vm._s(data.text)+\"\\n        \")]):_c('span',[_vm._v(\"\\n          \"+_vm._s(depth)+\"\\n          \"+_vm._s(data.text)+\"\\n        \")]),(data.children && data.show || false)?_c('ul',_vm._l((data.children),function(data,index){return _c('li',{key:index + '-' + data.text},[_c('sub-tree',_vm._b({},'sub-tree',{data: data, template: template},false))],1)}),0):_vm._e()]}}])})],1)]),_vm._v(\"fucking binary tree\\n  \"),_c('tree-root',{attrs:{\"data\":5},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar depth = ref.depth;\nvar data = ref.data;\nvar template = ref.template;\nreturn [(data > 0)?_c('div',{staticStyle:{\"padding-left\":\"10px\"}},[_c('sub-tree',_vm._b({},'sub-tree',{data: data - 1, template: template},false)),_vm._v(\"\\n      \"+_vm._s(depth)+\"\\n      \"),_c('sub-tree',_vm._b({},'sub-tree',{data: data - 1, template: template},false))],1):_vm._e()]}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div style=\"padding: 1em\">\n    tree render\n    <ul>\n      <li>\n        <!-- temp template function is the wrapper of scope slot itself -->\n        <tree-root :data=\"data\" v-slot=\"{depth, data, template}\">\n          <span style=\"cursor: pointer;\" v-if=\"data.children\" @click=\"toggle(data)\">\n            {{ depth }}\n            {{ data.show ? \"[-]\" : \"[+]\" }}\n            {{ data.text }}\n          </span>\n          <span v-else>\n            {{ depth }}\n            {{ data.text }}\n          </span>\n          <ul v-if=\"data.children && data.show || false\">\n            <li v-for=\"(data, index) in data.children\" :key=\"index + '-' + data.text\">\n              <!-- insert sub tree here start -->\n              <sub-tree v-bind=\"{data, template}\"></sub-tree>\n              <!-- insert sub tree here end -->\n            </li>\n          </ul>\n        </tree-root>\n      </li>\n    </ul>fucking binary tree\n    <tree-root :data=\"5\" v-slot=\"{depth, data, template}\">\n      <div v-if=\"data > 0\" style=\"padding-left: 10px\">\n        <sub-tree v-bind=\"{data: data - 1, template}\"></sub-tree>\n        {{ depth }}\n        <sub-tree v-bind=\"{data: data - 1, template}\"></sub-tree>\n      </div>\n    </tree-root>\n  </div>\n</template>\n\n<script>\nimport { SubTree, TreeRoot } from \"@/components/recursive\";\nexport default {\n  components: {\n    SubTree,\n    TreeRoot\n  },\n  data() {\n    return {\n      data: {\n        text: \"test\",\n        show: true,\n        children: [\n          {\n            text: \"test2\",\n            show: true,\n            children: [\n              {\n                text: \"test5\",\n                show: true,\n                children: [\n                  {\n                    text: \"test9\",\n                    show: true,\n                    children: [\n                      {\n                        text: \"test9\"\n                      }\n                    ]\n                  }\n                ]\n              },\n              {\n                text: \"test5\",\n                show: true,\n                children: [\n                  {\n                    text: \"test9\",\n                    show: true,\n                    children: [\n                      {\n                        text: \"test9\"\n                      }\n                    ]\n                  }\n                ]\n              },\n              {\n                text: \"test6\"\n              }\n            ]\n          },\n          {\n            text: \"test3\",\n            show: true,\n            children: [\n              { text: \"test4\" },\n              { text: \"test4\" },\n              { text: \"test4\" },\n              { text: \"test4\" },\n              { text: \"test4\" }\n            ]\n          }\n        ]\n      }\n    };\n  },\n  methods: {\n    toggle(node) {\n      node.show = !node.show;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Recursive.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Recursive.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Recursive.vue?vue&type=template&id=10b84f67&scoped=true&\"\nimport script from \"./Recursive.vue?vue&type=script&lang=js&\"\nexport * from \"./Recursive.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"10b84f67\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}